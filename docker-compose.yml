

services:
  # Primary Database - MariaDB 10.6
  frappe-db:
    image: mariadb:10.6
    container_name: frappe-light-db
    restart: unless-stopped
    networks:
      frappe-light-net:
        ipv4_address: 172.25.0.10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: ${DB_PORT}
    volumes:
      - ./volumes/light-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "bash", "-c", "${DB_HEALTH_CHECK_CMD}"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=128M
      --max-connections=100
      --query-cache-size=64M
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT}
          cpus: ${DB_CPU_LIMIT}
        reservations:
          memory: 1g
          cpus: '0.5'

  # Redis Cache
  frappe-redis:
    image: redis:7-alpine
    container_name: frappe-light-redis
    restart: unless-stopped
    networks:
      frappe-light-net:
        ipv4_address: 172.25.0.11
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
    volumes:
      - ./volumes/light-redis:/data
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    deploy:
      resources:
        limits:
          memory: ${REDIS_MEMORY_LIMIT}
          cpus: ${REDIS_CPU_LIMIT}
        reservations:
          memory: 256m
          cpus: '0.1'  # Frappe App Server
  # Frappe App Server
  frappe-app-1:
    image: frappe/bench:latest
    container_name: frappe-light-app-1
    restart: unless-stopped
    depends_on:
      frappe-db:
        condition: service_healthy
      frappe-redis:
        condition: service_healthy
    networks:
      frappe-light-net:
        ipv4_address: 172.25.3.10
    ports:
      - "${FRAPPE_APP_PORT_EXTERNAL}:8000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: >
      bash -c "
        echo 'Starting Frappe...' &&
        
        # تنظيف إذا كان bench تالفاً
        cd /home/frappe &&
        if [ -d 'frappe-bench' ] && [ ! -f 'frappe-bench/apps.txt' ]; then
          echo 'Removing corrupted bench...' &&
          rm -rf frappe-bench;
        fi &&
        
        # إذا لم يكن bench موجوداً، قم بتهيئته
        if [ ! -d 'frappe-bench' ]; then
          echo 'Initializing new bench...' &&
          bench init --skip-redis-config-generation --frappe-branch version-15 frappe-bench;
        fi &&
        
        # الانتقال إلى المسار الصحيح
        cd /home/frappe/frappe-bench &&
        echo 'In bench directory:' && pwd && ls -la &&
        
        # إنشاء موقع إذا لم يكن موجوداً
        if [ ! -d 'sites/site1.local' ]; then
          echo 'Creating site1.local...' &&
          bench new-site site1.local \
            --mariadb-root-password $$MYSQL_ROOT_PASSWORD \
            --admin-password $$ADMIN_PASSWORD \
            --force;
        fi &&
        
        echo 'Starting Frappe server...' &&
        bench use site1.local &&
        bench start
      "

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/method/version"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
    deploy:
      resources:
        limits:
          memory: ${FRAPPE_MEMORY_LIMIT}
          cpus: ${FRAPPE_CPU_LIMIT}
        reservations:
          memory: 1g
          cpus: '0.5'
  # SaaS Database
  saas-database:
    image: mariadb:10.6
    container_name: saas-light-database
    restart: unless-stopped
    networks:
      frappe-light-net:
        ipv4_address: 172.25.0.100
    environment:
      MYSQL_ROOT_PASSWORD: ${SAAS_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SAAS_DB_NAME}
      MYSQL_USER: ${SAAS_DB_USER}
      MYSQL_PASSWORD: ${SAAS_DB_PASSWORD}
    volumes:
      - ./volumes/light-saas-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "bash", "-c", "mysqladmin ping -h localhost -u root -p${SAAS_DB_ROOT_PASSWORD}"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.3'
        reservations:
          memory: 256m
          cpus: '0.2'

  # Proxy Server
  proxy-server:
    image: nginx:alpine
    container_name: frappe-light-proxy
    restart: unless-stopped
    networks:
      frappe-light-net:
        ipv4_address: 172.25.0.5
    ports:
      - "8080:80"    # تغيير من 80 إلى 8080
      - "8443:443"   # تغيير من 443 إلى 8443
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frappe-app-1
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: '0.3'
        reservations:
          memory: 128m
          cpus: '0.1'
networks:
  frappe-light-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}

volumes:
  light-db:
    driver: local
  light-redis:
    driver: local
  light-bench:
    driver: local
  light-saas-db:
    driver: local
  nginx_cache:
    driver: local